import asyncio
import logging
from aiogram import Bot, Dispatcher, types
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.filters import Command
from aiogram.enums import ChatMemberStatus

# üî¥ –¢–≤–æ–π —Ç–æ–∫–µ–Ω –∏ –∫–∞–Ω–∞–ª
BOT_TOKEN = "8172354164:AAFEeTSHw577ok5gGxC2v-Sq54bsilM3vNE"
CHANNEL_ID = "@taina_goroskop"

# –°–æ–∑–¥–∞—ë–º –±–æ—Ç–∞ –∏ –¥–∏—Å–ø–µ—Ç—á–µ—Ä
bot = Bot(token=BOT_TOKEN)
dp = Dispatcher()

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏—è –¥–ª—è –∫–∞—Ä—Ç
predictions = {
    "card_1": """üîÆ –¢–≤–æ—è –∫–∞—Ä—Ç–∞ - *–¢–µ–Ω—å –ø—Ä–æ—à–ª–æ–≥–æ*
–¢–≤–æ—è —Å—É–¥—å–±–∞ —Ö—Ä–∞–Ω–∏—Ç –≤ —Å–µ–±–µ –¥—Ä–µ–≤–Ω–∏–µ —É—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω–µ –±—ã–ª–∏ —É—Å–≤–æ–µ–Ω—ã. 
–í–æ–∑–º–æ–∂–Ω–æ, —Å–µ–π—á–∞—Å –Ω–∞—Å—Ç–∞–ª –º–æ–º–µ–Ω—Ç, —á—Ç–æ–±—ã –æ—Ç–ø—É—Å—Ç–∏—Ç—å —Ç—è–∂–µ—Å—Ç—å —Å—Ç–∞—Ä—ã—Ö –æ–±–∏–¥ –∏–ª–∏ –Ω–µ—Ä–µ—à—ë–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤. 
–≠—Ç–∞ –∫–∞—Ä—Ç–∞ –æ—Ç–∫—Ä—ã–≤–∞–µ—Ç –¥–≤–µ—Ä—å –¥–ª—è –ø—Ä–æ—â–µ–Ω–∏—è –∏ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –≥–∞—Ä–º–æ–Ω–∏–∏. 
–ü—Ä–∏–º–∏ –≤—ã–∑–æ–≤ –∏ –æ—Å–≤–æ–±–æ–¥–∏ —Å–≤–æ—é –¥—É—à—É.""",

    "card_2": """üîÆ –¢–≤–æ—è –∫–∞—Ä—Ç–∞ - *–ó–≤–µ–∑–¥–∞ –ø—É—Ç–µ–≤–æ–¥–Ω–∞—è*
–¢—ã —Å—Ç–æ–∏—à—å –Ω–∞ –ø–æ—Ä–æ–≥–µ –≤–∞–∂–Ω–æ–≥–æ –≤—ã–±–æ—Ä–∞, –∏ –∑–≤—ë–∑–¥—ã –Ω–∞–ø—Ä–∞–≤–ª—è—é—Ç —Ç–≤–æ—ë —Å–µ—Ä–¥—Ü–µ. 
–≠—Ç–∞ –∫–∞—Ä—Ç–∞ –≥–æ–≤–æ—Ä–∏—Ç –æ —Ç–æ–º, —á—Ç–æ —Ç—ã —É–∂–µ –Ω–∞ –≤–µ—Ä–Ω–æ–º –ø—É—Ç–∏, –∏ –≤–ø–µ—Ä–µ–¥–∏ —Ç–µ–±—è –∂–¥—ë—Ç —Å–≤–µ—Ç–ª—ã–π –º–æ–º–µ–Ω—Ç. 
–û–¥–Ω–∞–∫–æ, –±—É–¥—å –≥–æ—Ç–æ–≤ –∫ –≤–∞–∂–Ω–æ–º—É —Ä–µ—à–µ–Ω–∏—é, –∫–æ—Ç–æ—Ä–æ–µ —Å—Ç–∞–Ω–µ—Ç –ø–µ—Ä–µ–ª–æ–º–Ω—ã–º. 
–¢—ã –Ω–µ –æ–¥–∏–Ω ‚Äî —Ç–≤–æ–π –∞–Ω–≥–µ–ª-—Ö—Ä–∞–Ω–∏—Ç–µ–ª—å —Ä—è–¥–æ–º.""",

    "card_3": """üîÆ –¢–≤–æ—è –∫–∞—Ä—Ç–∞ - *–í—Ä–∞—Ç–∞ –∏–∑–º–µ–Ω–µ–Ω–∏–π*
–≠–Ω–µ—Ä–≥–∏—è –ø–µ—Ä–µ–º–µ–Ω –Ω–∞ –ø–æ—Ä–æ–≥–µ —Ç–≤–æ–µ–π –∂–∏–∑–Ω–∏. 
–í–æ–∑–º–æ–∂–Ω–æ, —Ç—ã —á—É–≤—Å—Ç–≤—É–µ—à—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –¥–æ–ª–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å—Å—è, –Ω–æ –Ω–µ –∑–Ω–∞–µ—à—å, —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å. 
–≠—Ç–∞ –∫–∞—Ä—Ç–∞ –ø–æ–¥—Å–∫–∞–∂–µ—Ç, —á—Ç–æ –Ω–æ–≤—ã–µ –Ω–∞—á–∏–Ω–∞–Ω–∏—è –º–æ–≥—É—Ç –±—ã—Ç—å –Ω–µ —Ç–∞–∫ —Å—Ç—Ä–∞—à–Ω—ã, –∫–∞–∫ –∫–∞–∂—É—Ç—Å—è. 
–ü–µ—Ä–µ–º–µ–Ω—ã –ø—Ä–∏–Ω–µ—Å—É—Ç —Ç–µ–±–µ –Ω–µ —Ç–æ–ª—å–∫–æ –∏—Å–ø—ã—Ç–∞–Ω–∏—è, –Ω–æ –∏ –Ω–µ—Å–º–µ—Ç–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –¥–ª—è —Ä–æ—Å—Ç–∞. 
–ü—Ä–∏–º–∏ –∏—Ö —Å –æ—Ç–∫—Ä—ã—Ç—ã–º —Å–µ—Ä–¥—Ü–µ–º."""
}

# –°–ª–æ–≤–∞—Ä—å –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –≤—ã–±–æ—Ä–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
user_choices = {}

# –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞
keyboard = InlineKeyboardMarkup(inline_keyboard=[
    [InlineKeyboardButton(text="üîÆ –ö–∞—Ä—Ç–∞ ‚Ññ1", callback_data="card_1")],
    [InlineKeyboardButton(text="üîÆ –ö–∞—Ä—Ç–∞ ‚Ññ2", callback_data="card_2")],
    [InlineKeyboardButton(text="üîÆ –ö–∞—Ä—Ç–∞ ‚Ññ3", callback_data="card_3")]
])

# –§—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –≤—ã–±–æ—Ä–∞ –∫–∞—Ä—Ç
@dp.callback_query(lambda c: c.data.startswith("card_"))
async def process_callback(callback_query: types.CallbackQuery):
    user_id = callback_query.from_user.id
    
    if user_id in user_choices:
        await bot.send_message(user_id, "–í—ã —É–∂–µ –≤—ã–±—Ä–∞–ª–∏ –∫–∞—Ä—Ç—É! –ò–∑–º–µ–Ω–∏—Ç—å –≤—ã–±–æ—Ä –Ω–µ–ª—å–∑—è.")
        await callback_query.answer()
        return
    
    user_choices[user_id] = callback_query.data
    prediction = predictions.get(callback_query.data, "–û—à–∏–±–∫–∞.")
    await bot.send_message(user_id, f"‚ú® –í–∞—à–µ –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ: {prediction}")
    await callback_query.answer()

# –ö–æ–º–∞–Ω–¥–∞ /send_poll –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –æ–ø—Ä–æ—Å–∞ –≤ –∫–∞–Ω–∞–ª
@dp.message(Command("send_poll"))
async def send_poll(message: types.Message):
    if message.chat.id == message.from_user.id:
        post_text = """üåô *–ó–∞–≥–∞–¥–∫–∞ —Å—É–¥—å–±—ã...*
        \n–í—ã–±–µ—Ä–∏ —Å–≤–æ—é –∫–∞—Ä—Ç—É –∏ —É–∑–Ω–∞–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–µ!"""
        await bot.send_message(CHANNEL_ID, post_text, reply_markup=keyboard, parse_mode="Markdown")
        await message.answer("‚úÖ –û–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–∞–Ω–∞–ª!")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
async def main():
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
